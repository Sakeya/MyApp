apply plugin: 'com.android.application'


//获取时间戳
def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmm')
    return formattedDate
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.1"

    signingConfigs {//签名信息 可以自定义很多
        signConfig {
            keyAlias 'chewchew'
            keyPassword 'chengxun@2015'
            storeFile file('cx.jks')
            storePassword 'chengxun@2015'
        }
    }

    defaultConfig {
        applicationId "com.cxria.myapplication"
        minSdkVersion 8
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        ndk {
            moduleName "CallNative" // <-- This is the name of my C++ module!
            stl "stlport_static"
            abiFilters "armeabi", "armeabi-v7a"
            ldLibs "android", "z"
            cFlags "-std=c99"
        }
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner" //测试类
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.signConfig //签名信息
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            testCoverageEnabled = true//输出覆盖率报告
        }
    }
    //修改生成的apk名字
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile

            if (variant.buildType.name.equals('release')) {
                def releaseApkName = 'test-' + variant.versionName + "-" + getDate() + '.apk'
                output.outputFile = new File(oldFile.parent, releaseApkName)
            }
        }
    }
    productFlavors {
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    //test above api 23
    androidTestCompile 'com.android.support:support-annotations:23.0.1'
    androidTestCompile 'com.android.support.test:runner:0.4'
    androidTestCompile 'org.hamcrest:hamcrest-library:1.3'
}
